services:

  # This service creates a container running Ubuntu 20.04 with ROS 1 Noetic
  noetic-no-gpu:
    extends: # Extend a service providing the config needed to run GUIs from the container
      file: ./docker/gui-compose.yaml
      service: base-gui
    build:
      context: .
      args:
        BASE_IMAGE: ubuntu:20.04 # Use a CUDA-less base image for the GPU-less service
  
  # This service adds NVIDIA GPU support to our Ubuntu 20.04 and ROS 1 Noetic setup
  noetic-nvidia:
    extends: # Extend a service providing the config needed to run GUIs from the container
      file: ./docker/gui-compose.yaml
      service: base-gui
    build: .
    environment: # Additional NVIDIA-required environment variables
      - NVIDIA_VISIBLE_DEVICES=all # Ensure that the container can access all NVIDIA devices
      - NVIDIA_DRIVER_CAPABILITIES=all # Enable all NVIDIA driver capabilities for container

      # Modern Docker Compose or NVIDIA documentation doesn't really mention these three:
      # - __NV_PRIME_RENDER_OFFLOAD=1 # Offload graphics applications to the NVIDIA GPU
      # - __GLX_VENDOR_LIBRARY_NAME=nvidia # Specify to use the NVIDIA driver for GLX graphics

      # Run `drm-info` to view your machine's DRM device info
      # - DRI_NAME=card1 # Set the DRI (Direct Rendering Infrastructure) device to the GPU
    network_mode: host # Share the host's network
    deploy:
      resources:
        reservations:   # Host machine must guarantee the container these resources
          devices:
            - driver: nvidia      # NVIDIA-provided driver
              count: all          # Reserve all GPU devices on the host machine
              capabilities: [gpu]
    runtime: nvidia               # Use the NVIDIA Container Runtime
