services:
  noetic-nvidia:
    build: .
    environment:
      - DISPLAY # Pass the DISPLAY environment variable for X11 forwarding
      - QT_X11_NO_MITSHM=1 # Prevent Qt apps in the container from using the MIT-SHM extension for X11
      - TERM # Pass the TERM environment variable specifying the terminal type
      - color_prompt=yes # Provide a colored prompt in the container

      - NVIDIA_VISIBLE_DEVICES=all # Ensure that the container can access all NVIDIA devices
      - NVIDIA_DRIVER_CAPABILITIES=all # Enable all NVIDIA driver capabilities for container
      - __NV_PRIME_RENDER_OFFLOAD=1 # Offload graphics applications to the NVIDIA GPU
      - __GLX_VENDOR_LIBRARY_NAME=nvidia # Specify to use the NVIDIA driver for GLX graphics

      # Run `drm-info` to view your machine's DRM device info
      - DRI_NAME=card1 # Set the DRI (Direct Rendering Infrastructure) device to the GPU
    network_mode: host # Share the host's network
    devices:
      - "/dev/dri:/dev/dri"
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix # Mount the X11 Unix socket to support GUIs
      - .:/spot_skills # Mount the current directory (should be the ROS workspace)
      - /etc/localtime:/etc/localtime:ro # Sync the container's timezone with the host (read-only)
    
    stdin_open: true    # docker run -i
    tty: true           # docker run -t
    deploy:
      resources:
        reservations:   # Host machine must guarantee the container these resources
          devices:
            - driver: nvidia      # NVIDIA-provided driver
              count: all          # Reserve all GPU devices on the host machine
              capabilities: [gpu]
    runtime: nvidia               # Use the NVIDIA Container Runtime
