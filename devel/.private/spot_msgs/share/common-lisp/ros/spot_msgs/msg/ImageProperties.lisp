; Auto-generated. Do not edit!


(cl:in-package spot_msgs-msg)


;//! \htmlinclude ImageProperties.msg.html

(cl:defclass <ImageProperties> (roslisp-msg-protocol:ros-message)
  ((camera_source
    :reader camera_source
    :initarg :camera_source
    :type cl:string
    :initform "")
   (image_data_coordinates
    :reader image_data_coordinates
    :initarg :image_data_coordinates
    :type geometry_msgs-msg:Polygon
    :initform (cl:make-instance 'geometry_msgs-msg:Polygon))
   (image_data_keypoint_type
    :reader image_data_keypoint_type
    :initarg :image_data_keypoint_type
    :type cl:fixnum
    :initform 0)
   (keypoint_coordinate_x
    :reader keypoint_coordinate_x
    :initarg :keypoint_coordinate_x
    :type (cl:vector cl:integer)
   :initform (cl:make-array 0 :element-type 'cl:integer :initial-element 0))
   (keypoint_coordinate_y
    :reader keypoint_coordinate_y
    :initarg :keypoint_coordinate_y
    :type (cl:vector cl:integer)
   :initform (cl:make-array 0 :element-type 'cl:integer :initial-element 0))
   (binary_descriptor
    :reader binary_descriptor
    :initarg :binary_descriptor
    :type (cl:vector cl:string)
   :initform (cl:make-array 0 :element-type 'cl:string :initial-element ""))
   (keypoint_score
    :reader keypoint_score
    :initarg :keypoint_score
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (keypoint_size
    :reader keypoint_size
    :initarg :keypoint_size
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (keypoint_angle
    :reader keypoint_angle
    :initarg :keypoint_angle
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (image_source
    :reader image_source
    :initarg :image_source
    :type spot_msgs-msg:ImageSource
    :initform (cl:make-instance 'spot_msgs-msg:ImageSource))
   (image_capture
    :reader image_capture
    :initarg :image_capture
    :type spot_msgs-msg:ImageCapture
    :initform (cl:make-instance 'spot_msgs-msg:ImageCapture))
   (frame_name_image_coordinates
    :reader frame_name_image_coordinates
    :initarg :frame_name_image_coordinates
    :type cl:string
    :initform ""))
)

(cl:defclass ImageProperties (<ImageProperties>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <ImageProperties>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'ImageProperties)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name spot_msgs-msg:<ImageProperties> is deprecated: use spot_msgs-msg:ImageProperties instead.")))

(cl:ensure-generic-function 'camera_source-val :lambda-list '(m))
(cl:defmethod camera_source-val ((m <ImageProperties>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader spot_msgs-msg:camera_source-val is deprecated.  Use spot_msgs-msg:camera_source instead.")
  (camera_source m))

(cl:ensure-generic-function 'image_data_coordinates-val :lambda-list '(m))
(cl:defmethod image_data_coordinates-val ((m <ImageProperties>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader spot_msgs-msg:image_data_coordinates-val is deprecated.  Use spot_msgs-msg:image_data_coordinates instead.")
  (image_data_coordinates m))

(cl:ensure-generic-function 'image_data_keypoint_type-val :lambda-list '(m))
(cl:defmethod image_data_keypoint_type-val ((m <ImageProperties>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader spot_msgs-msg:image_data_keypoint_type-val is deprecated.  Use spot_msgs-msg:image_data_keypoint_type instead.")
  (image_data_keypoint_type m))

(cl:ensure-generic-function 'keypoint_coordinate_x-val :lambda-list '(m))
(cl:defmethod keypoint_coordinate_x-val ((m <ImageProperties>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader spot_msgs-msg:keypoint_coordinate_x-val is deprecated.  Use spot_msgs-msg:keypoint_coordinate_x instead.")
  (keypoint_coordinate_x m))

(cl:ensure-generic-function 'keypoint_coordinate_y-val :lambda-list '(m))
(cl:defmethod keypoint_coordinate_y-val ((m <ImageProperties>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader spot_msgs-msg:keypoint_coordinate_y-val is deprecated.  Use spot_msgs-msg:keypoint_coordinate_y instead.")
  (keypoint_coordinate_y m))

(cl:ensure-generic-function 'binary_descriptor-val :lambda-list '(m))
(cl:defmethod binary_descriptor-val ((m <ImageProperties>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader spot_msgs-msg:binary_descriptor-val is deprecated.  Use spot_msgs-msg:binary_descriptor instead.")
  (binary_descriptor m))

(cl:ensure-generic-function 'keypoint_score-val :lambda-list '(m))
(cl:defmethod keypoint_score-val ((m <ImageProperties>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader spot_msgs-msg:keypoint_score-val is deprecated.  Use spot_msgs-msg:keypoint_score instead.")
  (keypoint_score m))

(cl:ensure-generic-function 'keypoint_size-val :lambda-list '(m))
(cl:defmethod keypoint_size-val ((m <ImageProperties>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader spot_msgs-msg:keypoint_size-val is deprecated.  Use spot_msgs-msg:keypoint_size instead.")
  (keypoint_size m))

(cl:ensure-generic-function 'keypoint_angle-val :lambda-list '(m))
(cl:defmethod keypoint_angle-val ((m <ImageProperties>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader spot_msgs-msg:keypoint_angle-val is deprecated.  Use spot_msgs-msg:keypoint_angle instead.")
  (keypoint_angle m))

(cl:ensure-generic-function 'image_source-val :lambda-list '(m))
(cl:defmethod image_source-val ((m <ImageProperties>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader spot_msgs-msg:image_source-val is deprecated.  Use spot_msgs-msg:image_source instead.")
  (image_source m))

(cl:ensure-generic-function 'image_capture-val :lambda-list '(m))
(cl:defmethod image_capture-val ((m <ImageProperties>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader spot_msgs-msg:image_capture-val is deprecated.  Use spot_msgs-msg:image_capture instead.")
  (image_capture m))

(cl:ensure-generic-function 'frame_name_image_coordinates-val :lambda-list '(m))
(cl:defmethod frame_name_image_coordinates-val ((m <ImageProperties>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader spot_msgs-msg:frame_name_image_coordinates-val is deprecated.  Use spot_msgs-msg:frame_name_image_coordinates instead.")
  (frame_name_image_coordinates m))
(cl:defmethod roslisp-msg-protocol:symbol-codes ((msg-type (cl:eql '<ImageProperties>)))
    "Constants for message type '<ImageProperties>"
  '((:KEYPOINT_UNKNOWN . 0)
    (:KEYPOINT_SIMPLE . 1)
    (:KEYPOINT_ORB . 2))
)
(cl:defmethod roslisp-msg-protocol:symbol-codes ((msg-type (cl:eql 'ImageProperties)))
    "Constants for message type 'ImageProperties"
  '((:KEYPOINT_UNKNOWN . 0)
    (:KEYPOINT_SIMPLE . 1)
    (:KEYPOINT_ORB . 2))
)
(cl:defmethod roslisp-msg-protocol:serialize ((msg <ImageProperties>) ostream)
  "Serializes a message object of type '<ImageProperties>"
  (cl:let ((__ros_str_len (cl:length (cl:slot-value msg 'camera_source))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_str_len) ostream))
  (cl:map cl:nil #'(cl:lambda (c) (cl:write-byte (cl:char-code c) ostream)) (cl:slot-value msg 'camera_source))
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'image_data_coordinates) ostream)
  (cl:write-byte (cl:ldb (cl:byte 8 0) (cl:slot-value msg 'image_data_keypoint_type)) ostream)
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'keypoint_coordinate_x))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'keypoint_coordinate_x))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'keypoint_coordinate_y))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 4294967296) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    ))
   (cl:slot-value msg 'keypoint_coordinate_y))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'binary_descriptor))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((__ros_str_len (cl:length ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_str_len) ostream))
  (cl:map cl:nil #'(cl:lambda (c) (cl:write-byte (cl:char-code c) ostream)) ele))
   (cl:slot-value msg 'binary_descriptor))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'keypoint_score))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'keypoint_score))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'keypoint_size))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'keypoint_size))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'keypoint_angle))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'keypoint_angle))
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'image_source) ostream)
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'image_capture) ostream)
  (cl:let ((__ros_str_len (cl:length (cl:slot-value msg 'frame_name_image_coordinates))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_str_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_str_len) ostream))
  (cl:map cl:nil #'(cl:lambda (c) (cl:write-byte (cl:char-code c) ostream)) (cl:slot-value msg 'frame_name_image_coordinates))
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <ImageProperties>) istream)
  "Deserializes a message object of type '<ImageProperties>"
    (cl:let ((__ros_str_len 0))
      (cl:setf (cl:ldb (cl:byte 8 0) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:slot-value msg 'camera_source) (cl:make-string __ros_str_len))
      (cl:dotimes (__ros_str_idx __ros_str_len msg)
        (cl:setf (cl:char (cl:slot-value msg 'camera_source) __ros_str_idx) (cl:code-char (cl:read-byte istream)))))
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'image_data_coordinates) istream)
    (cl:setf (cl:ldb (cl:byte 8 0) (cl:slot-value msg 'image_data_keypoint_type)) (cl:read-byte istream))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'keypoint_coordinate_x) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'keypoint_coordinate_x)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296)))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'keypoint_coordinate_y) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'keypoint_coordinate_y)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 2147483648) unsigned (cl:- unsigned 4294967296)))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'binary_descriptor) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'binary_descriptor)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((__ros_str_len 0))
      (cl:setf (cl:ldb (cl:byte 8 0) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:make-string __ros_str_len))
      (cl:dotimes (__ros_str_idx __ros_str_len msg)
        (cl:setf (cl:char (cl:aref vals i) __ros_str_idx) (cl:code-char (cl:read-byte istream))))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'keypoint_score) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'keypoint_score)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'keypoint_size) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'keypoint_size)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'keypoint_angle) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'keypoint_angle)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'image_source) istream)
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'image_capture) istream)
    (cl:let ((__ros_str_len 0))
      (cl:setf (cl:ldb (cl:byte 8 0) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) __ros_str_len) (cl:read-byte istream))
      (cl:setf (cl:slot-value msg 'frame_name_image_coordinates) (cl:make-string __ros_str_len))
      (cl:dotimes (__ros_str_idx __ros_str_len msg)
        (cl:setf (cl:char (cl:slot-value msg 'frame_name_image_coordinates) __ros_str_idx) (cl:code-char (cl:read-byte istream)))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<ImageProperties>)))
  "Returns string type for a message object of type '<ImageProperties>"
  "spot_msgs/ImageProperties")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'ImageProperties)))
  "Returns string type for a message object of type 'ImageProperties"
  "spot_msgs/ImageProperties")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<ImageProperties>)))
  "Returns md5sum for a message object of type '<ImageProperties>"
  "94ff5688662ac7e33ef10bbd7d52e755")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'ImageProperties)))
  "Returns md5sum for a message object of type 'ImageProperties"
  "94ff5688662ac7e33ef10bbd7d52e755")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<ImageProperties>)))
  "Returns full string definition for message of type '<ImageProperties>"
  (cl:format cl:nil "string camera_source~%~%# Polygon coordinates~%geometry_msgs/Polygon image_data_coordinates~%~%# Keypoint coordinates~%uint8 KEYPOINT_UNKNOWN=0~%uint8 KEYPOINT_SIMPLE=1~%uint8 KEYPOINT_ORB=2~%~%uint8 image_data_keypoint_type~%int32[] keypoint_coordinate_x~%int32[] keypoint_coordinate_y~%string[] binary_descriptor~%float64[] keypoint_score~%float64[] keypoint_size~%float64[] keypoint_angle~%~%ImageSource image_source~%ImageCapture image_capture~%~%string frame_name_image_coordinates~%================================================================================~%MSG: geometry_msgs/Polygon~%#A specification of a polygon where the first and last points are assumed to be connected~%Point32[] points~%~%================================================================================~%MSG: geometry_msgs/Point32~%# This contains the position of a point in free space(with 32 bits of precision).~%# It is recommeded to use Point wherever possible instead of Point32.  ~%# ~%# This recommendation is to promote interoperability.  ~%#~%# This message is designed to take up less space when sending~%# lots of points at once, as in the case of a PointCloud.  ~%~%float32 x~%float32 y~%float32 z~%================================================================================~%MSG: spot_msgs/ImageSource~%# Image type enums~%uint8 IMAGE_TYPE_UNKNOWN = 0~%uint8 IMAGE_TYPE_VISUAL = 1~%uint8 IMAGE_TYPE_DEPTH = 2~%~%# Pixel format enums~%uint8 PIXEL_FORMAT_UNKNOWN = 0~%uint8 PIXEL_FORMAT_GREYSCALE_U8 = 1~%uint8 PIXEL_FORMAT_RGB_U8 = 3~%uint8 PIXEL_FORMAT_RGBA_U8 = 4~%uint8 PIXEL_FORMAT_DEPTH_U16 = 5~%uint8 PIXEL_FORMAT_GREYSCALE_U16 = 6~%~%# Image format enums~%uint8 FORMAT_UNKNOWN = 0~%uint8 FORMAT_JPEG = 1~%uint8 FORMAT_RAW = 2~%uint8 FORMAT_RLE = 3~%~%string name~%int32 cols~%int32 rows~%float64 depth_scale~%~%# Camera pinhole model parameters~%float64 focal_length_x~%float64 focal_length_y~%float64 principal_point_x~%float64 principal_point_y~%float64 skew_x~%float64 skew_y~%~%uint8 image_type~%uint8[] pixel_formats~%uint8[] image_formats~%~%================================================================================~%MSG: spot_msgs/ImageCapture~%time acquisition_time~%~%FrameTreeSnapshot transforms_snapshot~%string frame_name_image_sensor~%~%sensor_msgs/Image image~%~%duration capture_exposure_duration~%float64 capture_sensor_gain~%~%================================================================================~%MSG: spot_msgs/FrameTreeSnapshot~%string[] child_edges~%ParentEdge[] parent_edges~%================================================================================~%MSG: spot_msgs/ParentEdge~%string parent_frame_name~%geometry_msgs/Pose parent_tform_child~%================================================================================~%MSG: geometry_msgs/Pose~%# A representation of pose in free space, composed of position and orientation. ~%Point position~%Quaternion orientation~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%================================================================================~%MSG: sensor_msgs/Image~%# This message contains an uncompressed image~%# (0, 0) is at top-left corner of image~%#~%~%Header header        # Header timestamp should be acquisition time of image~%                     # Header frame_id should be optical frame of camera~%                     # origin of frame should be optical center of camera~%                     # +x should point to the right in the image~%                     # +y should point down in the image~%                     # +z should point into to plane of the image~%                     # If the frame_id here and the frame_id of the CameraInfo~%                     # message associated with the image conflict~%                     # the behavior is undefined~%~%uint32 height         # image height, that is, number of rows~%uint32 width          # image width, that is, number of columns~%~%# The legal values for encoding are in file src/image_encodings.cpp~%# If you want to standardize a new string format, join~%# ros-users@lists.sourceforge.net and send an email proposing a new encoding.~%~%string encoding       # Encoding of pixels -- channel meaning, ordering, size~%                      # taken from the list of strings in include/sensor_msgs/image_encodings.h~%~%uint8 is_bigendian    # is this data bigendian?~%uint32 step           # Full row length in bytes~%uint8[] data          # actual matrix data, size is (step * rows)~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'ImageProperties)))
  "Returns full string definition for message of type 'ImageProperties"
  (cl:format cl:nil "string camera_source~%~%# Polygon coordinates~%geometry_msgs/Polygon image_data_coordinates~%~%# Keypoint coordinates~%uint8 KEYPOINT_UNKNOWN=0~%uint8 KEYPOINT_SIMPLE=1~%uint8 KEYPOINT_ORB=2~%~%uint8 image_data_keypoint_type~%int32[] keypoint_coordinate_x~%int32[] keypoint_coordinate_y~%string[] binary_descriptor~%float64[] keypoint_score~%float64[] keypoint_size~%float64[] keypoint_angle~%~%ImageSource image_source~%ImageCapture image_capture~%~%string frame_name_image_coordinates~%================================================================================~%MSG: geometry_msgs/Polygon~%#A specification of a polygon where the first and last points are assumed to be connected~%Point32[] points~%~%================================================================================~%MSG: geometry_msgs/Point32~%# This contains the position of a point in free space(with 32 bits of precision).~%# It is recommeded to use Point wherever possible instead of Point32.  ~%# ~%# This recommendation is to promote interoperability.  ~%#~%# This message is designed to take up less space when sending~%# lots of points at once, as in the case of a PointCloud.  ~%~%float32 x~%float32 y~%float32 z~%================================================================================~%MSG: spot_msgs/ImageSource~%# Image type enums~%uint8 IMAGE_TYPE_UNKNOWN = 0~%uint8 IMAGE_TYPE_VISUAL = 1~%uint8 IMAGE_TYPE_DEPTH = 2~%~%# Pixel format enums~%uint8 PIXEL_FORMAT_UNKNOWN = 0~%uint8 PIXEL_FORMAT_GREYSCALE_U8 = 1~%uint8 PIXEL_FORMAT_RGB_U8 = 3~%uint8 PIXEL_FORMAT_RGBA_U8 = 4~%uint8 PIXEL_FORMAT_DEPTH_U16 = 5~%uint8 PIXEL_FORMAT_GREYSCALE_U16 = 6~%~%# Image format enums~%uint8 FORMAT_UNKNOWN = 0~%uint8 FORMAT_JPEG = 1~%uint8 FORMAT_RAW = 2~%uint8 FORMAT_RLE = 3~%~%string name~%int32 cols~%int32 rows~%float64 depth_scale~%~%# Camera pinhole model parameters~%float64 focal_length_x~%float64 focal_length_y~%float64 principal_point_x~%float64 principal_point_y~%float64 skew_x~%float64 skew_y~%~%uint8 image_type~%uint8[] pixel_formats~%uint8[] image_formats~%~%================================================================================~%MSG: spot_msgs/ImageCapture~%time acquisition_time~%~%FrameTreeSnapshot transforms_snapshot~%string frame_name_image_sensor~%~%sensor_msgs/Image image~%~%duration capture_exposure_duration~%float64 capture_sensor_gain~%~%================================================================================~%MSG: spot_msgs/FrameTreeSnapshot~%string[] child_edges~%ParentEdge[] parent_edges~%================================================================================~%MSG: spot_msgs/ParentEdge~%string parent_frame_name~%geometry_msgs/Pose parent_tform_child~%================================================================================~%MSG: geometry_msgs/Pose~%# A representation of pose in free space, composed of position and orientation. ~%Point position~%Quaternion orientation~%~%================================================================================~%MSG: geometry_msgs/Point~%# This contains the position of a point in free space~%float64 x~%float64 y~%float64 z~%~%================================================================================~%MSG: geometry_msgs/Quaternion~%# This represents an orientation in free space in quaternion form.~%~%float64 x~%float64 y~%float64 z~%float64 w~%~%================================================================================~%MSG: sensor_msgs/Image~%# This message contains an uncompressed image~%# (0, 0) is at top-left corner of image~%#~%~%Header header        # Header timestamp should be acquisition time of image~%                     # Header frame_id should be optical frame of camera~%                     # origin of frame should be optical center of camera~%                     # +x should point to the right in the image~%                     # +y should point down in the image~%                     # +z should point into to plane of the image~%                     # If the frame_id here and the frame_id of the CameraInfo~%                     # message associated with the image conflict~%                     # the behavior is undefined~%~%uint32 height         # image height, that is, number of rows~%uint32 width          # image width, that is, number of columns~%~%# The legal values for encoding are in file src/image_encodings.cpp~%# If you want to standardize a new string format, join~%# ros-users@lists.sourceforge.net and send an email proposing a new encoding.~%~%string encoding       # Encoding of pixels -- channel meaning, ordering, size~%                      # taken from the list of strings in include/sensor_msgs/image_encodings.h~%~%uint8 is_bigendian    # is this data bigendian?~%uint32 step           # Full row length in bytes~%uint8[] data          # actual matrix data, size is (step * rows)~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <ImageProperties>))
  (cl:+ 0
     4 (cl:length (cl:slot-value msg 'camera_source))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'image_data_coordinates))
     1
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'keypoint_coordinate_x) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'keypoint_coordinate_y) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'binary_descriptor) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 4 (cl:length ele))))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'keypoint_score) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'keypoint_size) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'keypoint_angle) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'image_source))
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'image_capture))
     4 (cl:length (cl:slot-value msg 'frame_name_image_coordinates))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <ImageProperties>))
  "Converts a ROS message object to a list"
  (cl:list 'ImageProperties
    (cl:cons ':camera_source (camera_source msg))
    (cl:cons ':image_data_coordinates (image_data_coordinates msg))
    (cl:cons ':image_data_keypoint_type (image_data_keypoint_type msg))
    (cl:cons ':keypoint_coordinate_x (keypoint_coordinate_x msg))
    (cl:cons ':keypoint_coordinate_y (keypoint_coordinate_y msg))
    (cl:cons ':binary_descriptor (binary_descriptor msg))
    (cl:cons ':keypoint_score (keypoint_score msg))
    (cl:cons ':keypoint_size (keypoint_size msg))
    (cl:cons ':keypoint_angle (keypoint_angle msg))
    (cl:cons ':image_source (image_source msg))
    (cl:cons ':image_capture (image_capture msg))
    (cl:cons ':frame_name_image_coordinates (frame_name_image_coordinates msg))
))
