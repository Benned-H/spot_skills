;; Auto-generated. Do not edit!


(when (boundp 'spot_msgs::PoseBodyGoal)
  (if (not (find-package "SPOT_MSGS"))
    (make-package "SPOT_MSGS"))
  (shadow 'PoseBodyGoal (find-package "SPOT_MSGS")))
(unless (find-package "SPOT_MSGS::POSEBODYGOAL")
  (make-package "SPOT_MSGS::POSEBODYGOAL"))

(in-package "ROS")
;;//! \htmlinclude PoseBodyGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass spot_msgs::PoseBodyGoal
  :super ros::object
  :slots (_body_pose _roll _pitch _yaw _body_height ))

(defmethod spot_msgs::PoseBodyGoal
  (:init
   (&key
    ((:body_pose __body_pose) (instance geometry_msgs::Pose :init))
    ((:roll __roll) 0)
    ((:pitch __pitch) 0)
    ((:yaw __yaw) 0)
    ((:body_height __body_height) 0.0)
    )
   (send-super :init)
   (setq _body_pose __body_pose)
   (setq _roll (round __roll))
   (setq _pitch (round __pitch))
   (setq _yaw (round __yaw))
   (setq _body_height (float __body_height))
   self)
  (:body_pose
   (&rest __body_pose)
   (if (keywordp (car __body_pose))
       (send* _body_pose __body_pose)
     (progn
       (if __body_pose (setq _body_pose (car __body_pose)))
       _body_pose)))
  (:roll
   (&optional __roll)
   (if __roll (setq _roll __roll)) _roll)
  (:pitch
   (&optional __pitch)
   (if __pitch (setq _pitch __pitch)) _pitch)
  (:yaw
   (&optional __yaw)
   (if __yaw (setq _yaw __yaw)) _yaw)
  (:body_height
   (&optional __body_height)
   (if __body_height (setq _body_height __body_height)) _body_height)
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/Pose _body_pose
    (send _body_pose :serialization-length)
    ;; int8 _roll
    1
    ;; int8 _pitch
    1
    ;; int8 _yaw
    1
    ;; float32 _body_height
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/Pose _body_pose
       (send _body_pose :serialize s)
     ;; int8 _roll
       (write-byte _roll s)
     ;; int8 _pitch
       (write-byte _pitch s)
     ;; int8 _yaw
       (write-byte _yaw s)
     ;; float32 _body_height
       (sys::poke _body_height (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/Pose _body_pose
     (send _body_pose :deserialize buf ptr-) (incf ptr- (send _body_pose :serialization-length))
   ;; int8 _roll
     (setq _roll (sys::peek buf ptr- :char)) (incf ptr- 1)
     (if (> _roll 127) (setq _roll (- _roll 256)))
   ;; int8 _pitch
     (setq _pitch (sys::peek buf ptr- :char)) (incf ptr- 1)
     (if (> _pitch 127) (setq _pitch (- _pitch 256)))
   ;; int8 _yaw
     (setq _yaw (sys::peek buf ptr- :char)) (incf ptr- 1)
     (if (> _yaw 127) (setq _yaw (- _yaw 256)))
   ;; float32 _body_height
     (setq _body_height (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get spot_msgs::PoseBodyGoal :md5sum-) "2aaa468be31e97608ddb9e68aa66e756")
(setf (get spot_msgs::PoseBodyGoal :datatype-) "spot_msgs/PoseBodyGoal")
(setf (get spot_msgs::PoseBodyGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# The pose the body should be moved to. Only the orientation and the z component (body height) of position is considered.
# If this is unset, the rpy/body height values will be used instead.
geometry_msgs/Pose body_pose

# Alternative specification of the body pose with rpy (in degrees). These values are ignored if the body_pose is set
int8 roll
int8 pitch
int8 yaw
float32 body_height

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :spot_msgs/PoseBodyGoal "2aaa468be31e97608ddb9e68aa66e756")


