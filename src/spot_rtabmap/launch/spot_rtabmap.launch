<launch>
    <arg name="camera0" default="frontleft" />
    <arg name="camera1" default="frontright" />
    <arg name="localization_mode" default="false" />
    <arg name="reload" default="false" />
    <arg name="rtabmap_viz" default="false" />
    <arg name="use_custom_spot_driver" default="false" />

    <arg name="in_pose_topic" value="/spot/go_to_pose2" if="$(arg use_custom_spot_driver)"/>
    <arg name="in_pose_topic" value="/spot/go_to_pose" unless="$(arg use_custom_spot_driver)"/>

    <!--  should reload? -->
    <arg name="rtabmap_args" value="--delete_db_on_start" if="$(arg reload)" />
    <arg name="rtabmap_args" value="" unless="$(arg reload)" />

    <!-- MAIN GROUP -->
    <group ns="rtabmap">
        <!-- Use RGBD synchronization -->
        <!-- Here is a general example using a standalone nodelet, 
         but it is recommended to attach this nodelet to nodelet 
         manager of the camera to avoid topic serialization -->
        <!-- RGBD sync -->
        <include file="$(find spot_rtabmap)/launch/rgbd_sync_dual.launch">
            <arg name="camera0" value="$(arg camera0)" />
            <arg name="camera1" value="$(arg camera1)" />
        </include>

        <node name="point_cloud_sphere_filter" pkg="spot_rtabmap"
            type="point_cloud_filtering.py" output="screen">
            <param name="moving_frame" value="base_link" />
            <param name="sphere_radius" value="1.5" />
        </node>

        <node pkg="sensor_filters" type="pointcloud2_filter_chain"
            name="passthrough_z" output="screen">
            <rosparam command="load"
                file="$(find spot_rtabmap)/config/spot_cloud_filter.yaml" />
            <remap from="~input" to="/filtered_pointcloud_sphere" />
            <remap from="~output" to="/filtered_pointcloud_passthrough" />
        </node>

        <!-- args="delete_db_on_start" if you want to start a new map -->
        <node name="rtabmap" pkg="rtabmap_slam" type="rtabmap" output="screen"
            args="$(arg rtabmap_args)">
            <param name="frame_id" type="string" value="body" />

            <!-- Use RGB-D instead of just depth images -->
            <param name="subscribe_depth" type="bool" value="false" />
            <param name="subscribe_stereo" type="bool" value="false" />
            <param name="subscribe_rgb" type="bool" value="false" />
            <param name="subscribe_rgbd" type="bool" value="true" />
            <param name="subscribe_scan" type="bool" value="false" /> <!-- Used for 2D LIDAR -->
            <param name="subscribe_scan_cloud" type="bool" value="true" /> <!-- Used for 3D LIDAR publishing sensor_msgs/PointCloud2 -->

            <!-- rgbd image -->
            <param name="rgbd_cameras" type="int" value="2" />
            <remap from="rgbd_image0" to="$(arg camera0)_rgbd_image" />
            <remap from="rgbd_image1" to="$(arg camera1)_rgbd_image" />

            <!-- remapping -->
            <remap from="odom" to="/spot/odometry" />
            <remap from="initialpose" to="/initialpose" />
            <!-- <remap from="scan_cloud" to="/spot/lidar/points" /> -->
            <remap from="scan_cloud" to="/filtered_pointcloud_passthrough" />

            <!-- Remap ROS topics related to navigation -->
            <remap from="goal" to="/rtabmap/goal" />
            <remap from="goal_out" to="/move_base_simple/goal" />

            <!-- params -->
            <param name="sync_queue_size" type="int" value="100" />
            <param name="approx_sync" type="bool" value="true" />
            <param name="approx_sync_max_interval" type="double" value="0.01" /> <!-- (sec) 0 means infinite interval duration (used with approx_sync=true) -->

            <!-- Localization mode -->
            <param name="Mem/IncrementalMemory" type="string" value="true"
                if="$(arg localization_mode)" />
            <param name="Mem/ReduceGraph" type="string" value="false"
                if="$(arg localization_mode)" />
            <param name="RGBD/StartAtOrigin" type="string" value="false"
                if="$(arg localization_mode)" />

            <!-- Mapping mode (i.e. not localization mode) -->
            <param name="Mem/IncrementalMemory" type="string" value="true"
                unless="$(arg localization_mode)" />
            <param name="Mem/ReduceGraph" type="string" value="true"
                unless="$(arg localization_mode)" />
            <param name="RGBD/StartAtOrigin" type="string" value="true"
                unless="$(arg localization_mode)" />
            <!-- <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization_mode)"
            /> -->

            <!-- RTAB-Map's parameters, taken from kaiyu and the tutorial -->
            <param name="RGBD/ProximityBySpace" type="string" value="true" />
            <param name="RGBD/NeighborLinkRefining" type="string" value="true" />
            <param name="RGBD/AngularUpdate" type="string" value="0.01" />
            <param name="RGBD/LinearUpdate" type="string" value="0.01" />
            <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false" />
            <!-- <param name="RGBD/OptimizeMaxError" type="string" value="0" /> -->
            <param name="RGBD/StartAtOrigin" type="string" value="false" />
            <param name="Reg/Force3DoF" type="string" value="true" />
            <param name="Reg/Strategy" type="string" value="1" /> <!-- 1 == ICP -->
            <param name="Vis/MinInliers" type="string" value="12" />
            <param name="Vis/EstimationType" type="string" value="0" />
            <param name="Grid/CellSize" type="string" value="0.02" />

            <!-- Create the occupancy grid using both the laser scan and depth image(s) -->
            <param name="Grid/Sensor" type="string" value="2" />
            <param name="Rtabmap/DetectionRate" type="string" value="0" />

            <!-- ICP parameters -->
            <param name="Icp/VoxelSize" type="string" value="0.05" />
            <param name="Icp/MaxCorrespondenceDistance" type="string" value="0.1" />
        </node>

        <!-- Visualisation RTAB-Map -->
        <node if="$(arg rtabmap_viz)" pkg="rtabmap_viz" type="rtabmap_viz" name="rtabmap_viz"
            args="-d $(find rtabmap_demos)/launch/config/rgbd_gui.ini" output="screen">
            <param name="subscribe_depth" type="bool" value="false" />
            <param name="subscribe_rgb" type="bool" value="false" />
            <param name="subscribe_rgbd" type="bool" value="true" />
            <param name="subscribe_scan_cloud" type="bool" value="true" />
            <param name="frame_id" type="string" value="body" />
            <param name="wait_for_transform" type="bool" value="true" />

            <remap from="rgb/image" to="$(arg camera0)_rgbd_image" />
            <!-- <remap from="depth/image" to="/data_throttled_image_depth" /> -->
            <!-- <remap from="rgb/camera_info" to="/data_throttled_camera_info" /> -->
            <remap from="scan" to="/spot/lidar/points" />
            <!-- <remap from="odom" to="/az3/base_controller/odom" /> -->

            <param name="rgb/image_transport" type="string" value="compressed" />
            <!-- <param name="depth/image_transport" type="string" value="compressedDepth" /> -->
        </node>
    </group>
</launch>