<!-- Launch the core nodes required to control a robot using MoveIt -->
<launch>

    <!-- Default planning pipeline: OMPL -->
    <arg name="pipeline" default="ompl" />

    <!-- Default: Don't provide a GUI for manual control of the robot joint states -->
    <arg name="joints_gui" default="false" />

    <!-- Launch the main MoveIt executable (move_group) -->
    <include file="$(find spot_moveit_config)/launch/move_group.launch">
        <arg name="allow_trajectory_execution" value="true" />
        <arg name="info" value="true" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="pipeline" value="$(arg pipeline)" />
        <arg name="load_robot_description" value="$(arg load_robot_description)" />
        <arg name="moveit_controller_manager" value="$(arg moveit_controller_manager)" />
        <arg name="fake_execution_type" value="$(arg fake_execution_type)" />
    </include>

    <!-- Enable other launch files to override where MoveIt listens for joint states -->
    <arg name="joint_state_source_list" default="[move_group/fake_controller_joint_states]" />

    <!-- When there's no real robot connected, we need to publish fake joint states
        using the joint_state_publisher node. We tell this node to listen to the
        fake MoveIt controller using its `source_list` parameter -->
    <group if="$(eval arg('moveit_controller_manager') == 'fake')">

        <!-- If no `joints_gui`, use a joint state publisher without a GUI -->
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" unless="$(arg joints_gui)">
            <rosparam param="source_list" subst_value="true">$(arg joint_state_source_list)</rosparam>
        </node>

        <!-- Otherwise, use a joint state publisher with a joint-controlling GUI -->
        <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" if="$(arg joints_gui)">
            <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
        </node>

        <!-- Given the published joint states, publish tf for the robot links -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

    </group>

</launch>