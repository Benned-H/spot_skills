<!-- Launch the core nodes required to control a robot using MoveIt -->
<launch>

    <!-- Should MoveIt plan to control a simulated or real robot? -->
    <arg name="real_robot"/>
    <arg name="load_robot_description"/>

    <!-- If we're actively running TAMP, give the planner control over the robot joint states -->
    <arg name="tamp_controls_joint_states" default="false"/>

    <!-- Choose MoveIt's controller manager: fake, simple, or ros_control

     - fake - Provides fake trajectory execution, when we don't have a real robot

     - simple - Interfaces with any low-level controller supporting either the
        JointTrajectoryController or GripperActionController API from the ROS controllers package

     - ros_control - Directly interfaces with the ROS Controller Manager
    
     Reference: https://tinyurl.com/moveit-noetic-controllers

     Simulation: Use "fake" controller manager | Real robot: Use "simple" -->
    <arg name="moveit_controller_manager" value="fake" unless="$(arg real_robot)"/>
    <arg name="moveit_controller_manager" value="simple" if="$(arg real_robot)"/>

    <!-- Default planning pipeline: OMPL -->
    <arg name="pipeline" default="ompl" />

    <!-- Default not in debug mode -->
    <arg name="debug" default="false" />

    <!-- Set execution mode for fake execution controllers
        Options: interpolate, via points, or last point
        Reference: https://tinyurl.com/noetic-fake-controller-manager -->
    <arg name="fake_execution_type" default="interpolate" />

    <!-- Launch the main MoveIt executable (move_group) -->
    <include file="$(find spot_moveit_config)/launch/move_group.launch">
        <arg name="allow_trajectory_execution" value="true" />
        <arg name="info" value="true" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="pipeline" value="$(arg pipeline)" />
        <arg name="load_robot_description" value="$(arg load_robot_description)" />
        <arg name="moveit_controller_manager" value="$(arg moveit_controller_manager)" />
        <arg name="fake_execution_type" value="$(arg fake_execution_type)" />
    </include>

    <!-- Enable other launch files to override where MoveIt listens for joint states -->
    <arg name="joint_state_source_list" default="[move_group/fake_controller_joint_states]" />

    <!-- When there's no real robot connected, we need to publish fake joint states
        using the joint_state_publisher node. We tell this node to listen to the
        fake MoveIt controller using its `source_list` parameter -->
    <group unless="$(arg real_robot)">

        <!-- Use a joint publisher to provide MoveIt a stable stream of joint states -->
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
            <rosparam param="source_list" subst_value="true">$(arg joint_state_source_list)</rosparam>
        </node>

        <!-- Given the published joint states, publish tf for the robot links -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

    </group>

</launch>