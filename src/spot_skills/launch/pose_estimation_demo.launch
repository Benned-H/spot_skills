<!-- Launch the nodes necessary to demonstrate the EstimatePose service -->
<launch>

    <!-- Which camera should be used for pose estimation? -->
    <param name="estimate_pose_client/default_cameras" type="str" value="frontright,frontleft"/>

    <!-- Launch and authenticate with the Spot ROS driver -->
    <include file="$(find spot_skills)/launch/authenticate_spot_driver.launch">
        <arg name="load_robot_description" value="true"/>
    </include>

    <!-- Load the list of known objects into the ROS parameters -->
    <rosparam command="load" file="$(find spot_skills)/config/known_objects.yaml"/>

    <!-- Launch the Spot ROS wrapper (provides RGBD image pair service) -->
    <node name="spot_wrapper_node" pkg="spot_skills" type="spot_wrapper_node.py" output="screen"/>

    <!-- Launch the object pose estimate client -->
    <node name="estimate_pose_client" pkg="spot_skills" type="estimate_pose_client.py" output="screen"/>

    <!-- Launch the dummy EstimatePose server only if its flag is specified -->
    <arg name="dummy_pose_server" default="false"/>
    <group if="$(arg dummy_pose_server)">
        <node name="estimate_pose_server" pkg="spot_skills" type="dummy_estimate_pose_server.py" output="screen"/>
    </group>

    <!-- Launch RViz with a demo-specific config file -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find spot_skills)/rviz/pose_estimate.rviz"/>

    <!-- Launch rqt_gui to visualize the images used for pose estimation -->
    <node name="rqt_gui" pkg="rqt_gui" type="rqt_gui"
        args="--perspective-file $(find spot_skills)/rviz/pose_estimate.perspective"/>

</launch>