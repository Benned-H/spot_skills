<!-- Launch all nodes to control Spot, simulated or real, using MoveIt

    This file launches/includes the following nodes/launch files:
        - bringup_moveit_core.launch - All MoveIt-specific nodes for controlling any robot
        - fake_gripper_action_server - Fake controller for Spot's gripper (if simulated robot)
        - bringup_spot_driver.launch - Connects to Spot using its ROS driver (if real robot)
        - spot_wrapper_node - Connects to Spot using the ROS wrapper (to control real robot)
-->
<launch>

    <!-- For safety reasons, do not assume which Spot is being used -->
    <arg name="spot_name"/>

    <!-- Are we using a simulated (default) or real Spot? -->
    <arg name="real_robot" default="false"/>

    <!-- If we're actively running TAMP, give the planner control over the robot joint states -->
    <arg name="actively_running_tamp" default="false"/>

    <!-- Launch the core nodes MoveIt uses to control a robot (simulated or real) -->
    <include file="$(find spot_skills)/launch/bringup/bringup_moveit_core.launch">
        <!-- Load/override the robot description (URDF) using MoveIt -->
        <arg name="load_robot_description" value="true"/>
        <arg name="real_robot" value="$(arg real_robot)"/>
        <arg name="actively_running_tamp" value="$(arg actively_running_tamp)"/>
    </include>

    <!-- If we're running in simulation, launch a fake controller for Spot's gripper -->
    <group unless="$(arg real_robot)">
        <node name="fake_gripper_action_server" pkg="spot_skills" type="fake_gripper_action_server.py" output="screen"/>
    </group>

    <!-- If we're running on the real robot, launch the Spot ROS driver and wrapper -->
    <group if="$(arg real_robot)">

        <!-- Launch the Spot ROS 1 driver for the named Spot -->
        <include file="$(find spot_skills)/launch/bringup/bringup_spot_driver.launch">
            <arg name="spot_name" value="$(arg spot_name)"/>

            <!-- Load Spot's URDF/SRDF using MoveIt, not the Spot driver -->
            <arg name="load_robot_description" value="false"/>
        </include>

        <!-- Launch a node to map Spot's joint states into link transforms -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

        <!-- Launch a wrapper providing an interface to Spot for ROS and MoveIt -->
        <node name="spot_wrapper_node" pkg="spot_skills" type="spot_wrapper_node.py" output="screen" required="true"/>

    </group>
</launch>